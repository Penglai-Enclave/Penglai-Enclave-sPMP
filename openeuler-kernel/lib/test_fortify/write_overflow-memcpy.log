ok: unsafe memcpy() usage correctly detected with '__write_overflow' in lib/test_fortify/write_overflow-memcpy.c
In file included from ./include/linux/string.h:253,
                 from ./include/linux/bitmap.h:11,
                 from ./include/linux/cpumask.h:12,
                 from ./include/linux/smp.h:13,
                 from ./include/linux/lockdep.h:14,
                 from ./include/linux/spinlock.h:63,
                 from ./include/linux/mmzone.h:8,
                 from ./include/linux/gfp.h:7,
                 from ./include/linux/slab.h:15,
                 from lib/test_fortify/test_fortify.h:4,
                 from lib/test_fortify/write_overflow-memcpy.c:5:
In function 'fortify_memcpy_chk',
    inlined from 'do_fortify_tests' at lib/test_fortify/test_fortify.h:34:2:
./include/linux/fortify-string.h:397:25: error: call to '__write_overflow' declared with attribute error: detected write beyond size of object (1st parameter)
  397 |                         __write_overflow();
      |                         ^~~~~~~~~~~~~~~~~~
./include/linux/fortify-string.h:404:25: error: call to '__write_overflow_field' declared with attribute warning: detected write beyond size of field (1st parameter); maybe use struct_group()? [-Werror=attribute-warning]
  404 |                         __write_overflow_field(p_size_field, size);
      |                         ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
cc1: all warnings being treated as errors
